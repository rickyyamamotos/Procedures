https://github.com/instructure/canvas-lms
https://github.com/instructure/canvas-lms/wiki/Production-Start

ubuntu 18.04
2 cpus
8 gb ram
30 storage

$ useradd -m <Username> -s /bin/bash 
$ passwd <Username>
	<Password>
$ visudo
	<Username> ALL=NOPASSWD: ALL

//* Snapshot

Installing PostgreSQL
$ su <Username>
$ sudo apt-get install postgresql -y
$ exit
$ su postgres
$ /usr/lib/postgresql/10/bin/pg_ctl -D /var/lib/postgresql/10/main -l logfile start
	//* the service may be already runing
$ psql
postgres*# show server_version;
	//* 10.12
postgres*# \q
$ exit
$ sudo -u postgres createuser <Username> --no-createdb --no-superuser --no-createrole --pwprompt
		//* enter: <Password>
$ sudo -u postgres createdb <DBName> --owner=<Username>

Installing canvas
$ su <Username>
$ sudo apt-get install git-core -y
$ cd /var
$ sudo mkdir canvas
$ sudo chown <Username>:www-data canvas
$ git clone https://github.com/instructure/canvas-lms.git canvas
$ cd /var/canvas
$ git checkout stable
$ sudo apt-get install software-properties-common -y
$ sudo add-apt-repository ppa:brightbox/ruby-ng -y
$ sudo apt-get update -y
$ sudo apt-get install -y ruby2.4 ruby2.4-dev zlib1g-dev libxml2-dev libsqlite3-dev postgresql libpq-dev libxmlsec1-dev curl make g++ -y
$ curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
$ sudo apt-get install nodejs -y

Configure PostgreSQL
$ exit
$ sudo su
$ sudo -u postgres createuser <Username>
$ sudo -u postgres psql -c "alter user <Username> with superuser" postgres

Configure Canvas
$ su <Username>
$ cd /var/canvas
$ sudo gem install bundler --version 1.13.6
$ bundle _1.13.6_ install --path vendor/bundle
$ curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
$ echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
$ sudo apt-get update && sudo apt-get install yarn=1.10.1-1 -y
$ sudo apt-get install python -y
$ yarn install

$ cd /var/canvas
$ for config in amazon_s3 database delayed_jobs domain file_store outgoing_mail security external_migration; do cp config/$config.yml.example config/$config.yml; done
#$ cp /var/canvas/config/dynamic_settings.yml.example /var/canvas/config/dynamic_settings.yml
#$ nano /var/canvas/config/dynamic_settings.yml
	production:
		//* change localhost to <Site>
$ cp /var/canvas/config/database.yml.example /var/canvas/config/database.yml
$ nano /var/canvas/config/database.yml
	production:
	  adapter: postgresql
	  encoding: utf8
	  database: <DBName>
	  host: localhost
	  username: <Username>
	  password: <Password>
	  timeout: 5000

$ cp /var/canvas/config/outgoing_mail.yml.example /var/canvas/config/outgoing_mail.yml
$ nano /var/canvas/config/outgoing_mail.yml
	production:
	  address: "smtp.gmail.com"
	  port: "587"
	  user_name: "<Email>"
	  password: "<Password>"
	  authentication: "login"
	  domain: "gmail.com"
	  outgoing_address: "<Email>"
	  default_name: "<Site>"
$ cp /var/canvas/config/domain.yml.example /var/canvas/config/domain.yml
$ nano /var/canvas/config/domain.yml
	  domain: "<Site>"
	  files_domain: "canvasfiles.<Site>"
In godaddy add an A record for canvasfiles.<Site> XXX.XXX.XXX.171
$ cp /var/canvas/config/security.yml.example /var/canvas/config/security.yml
$ nano /var/canvas/config/security.yml
	  encryption_key: <Key>

$ mkdir -p /var/canvas/log /var/canvas/tmp/pids public/assets /var/canvas/app/stylesheets/brandable_css_brands
$ touch /var/canvas/app/stylesheets/_brandable_variables_defaults_autogenerated.scss
$ touch /var/canvas/Gemfile.lock
$ touch /var/canvas/log/production.log
$ sudo chown -R <Username> /var/canvas/config/environment.rb /var/canvas/log /var/canvas/tmp /var/canvas/public/assets /var/canvas/app/stylesheets/_brandable_variables_defaults_autogenerated.scss /var/canvas/app/stylesheets/brandable_css_brands /var/canvas/Gemfile.lock /var/canvas/config.ru
$ yarn install
$ RAILS_ENV=production bundle exec rake canvas:compile_assets
$ sudo chown -R <Username> /var/canvas/public/dist/brandable_css
$ RAILS_ENV=production bundle exec rake db:initial_setup
	CANVAS_LMS_<Username>_EMAIL		<Email>
	CANVAS_LMS_<Username>_PASSWORD	<Password>
	CANVAS_LMS_ACCOUNT_NAME		<Site>
	CANVAS_LMS_STATS_COLLECTION	3



$ sudo apt-get install -y dirmngr gnupg
$ sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys <key>
$ sudo apt-get install -y apt-transport-https ca-certificates
$ sudo sh -c 'echo deb https://oss-binaries.phusionpassenger.com/apt/passenger bionic main > /etc/apt/sources.list.d/passenger.list'
$ sudo apt-get update -y

//* Snapshot

$ sudo apt-get install passenger libapache2-mod-passenger apache2 -y
$ sudo a2enmod rewrite
$ sudo a2enmod passenger
$ sudo apache2ctl restart
$ sudo apt-get install apache2-dev -y
$ sudo /usr/bin/passenger-config validate-install
	//* press <Enter> to validate the Passenger itself
$ sudo /usr/sbin/passenger-memory-stats

$ sudo nano /etc/apache2/apache2.conf
#	LoadModule passenger_module /usr/lib/apache2/modules/mod_passenger.so
#	PassengerRoot /usr
		//* nano /etc/apache2/mods-enabled/passenger.conf shows
		//* PassengerRoot /usr/lib/ruby/vendor_ruby/phusion_passenger/locations.ini
	PassengerRuby /usr/bin/ruby
		//* nano /etc/apache2/mods-enabled/passenger.conf shows
		//* PassengerDefaultRuby /usr/bin/passenger_free_rub
$ sudo nano /etc/apache2/mods-enabled/passenger.conf
	<IfModule mod_passenger.c>
	   PassengerDefaultUser <Username>
	   #PassengerDefaultRuby /usr/bin/passenger_free_ruby
	   PassengerDefaultRuby /usr/bin/ruby
$ cd /usr/bin
$ sudo wget https://dl.eff.org/certbot-auto
$ sudo chmod a+x certbot-auto
$ sudo certbot-auto --apache -d <Site> -d canvasfiles.<Site>
$ sudo rm /etc/apache2/sites-enabled/* -f
$ sudo nano /etc/apache2/sites-available/canvas.conf
	<VirtualHost *:80>
	  ServerName <Site>
	  ServerAlias canvasfiles.<Site>
	  ServerAdmin <Email>
	  DocumentRoot /var/canvas/public
	  RewriteEngine On
	  RewriteCond %{HTTP:X-Forwarded-Proto} !=https
	  RewriteCond %{REQUEST_URI} !^/health_check
	  RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI} [L]
	  ErrorLog /var/log/apache2/canvas_errors.log
	  LogLevel warn
	  CustomLog /var/log/apache2/canvas_access.log combined
	  SetEnv RAILS_ENV production
	  <Directory /var/canvas/public>
	    Allow from all
	    Options -MultiViews
	  </Directory>
	</VirtualHost>
	<VirtualHost *:443>
	  ServerName <Site>
	  ServerAlias canvasfiles.<Site>
	  ServerAdmin <Email>
	  DocumentRoot /var/canvas/public
	  ErrorLog /var/log/apache2/canvas_errors.log
	  LogLevel warn
	  CustomLog /var/log/apache2/canvas_ssl_access.log combined
	  SSLEngine on
	  BrowserMatch "MSIE [17-9]" ssl-unclean-shutdown
	  # the following ssl certificate files are generated for you from the ssl-cert package.
	  SSLCertificateFile /etc/letsencrypt/live/<Site>/fullchain.pem
	  SSLCertificateKeyFile /etc/letsencrypt/live/<Site>/privkey.pem
	  SSLCipher<Phone> HIGH:MEDIUM:!ADH
	  SSLProtocol all -SSLv2
	  SetEnv RAILS_ENV production
	  <Directory /var/canvas/public>
	    Allow from all
	    Options -MultiViews
	  </Directory>
	</VirtualHost>
	SSLRandomSeed startup builtin
	SSLRandomSeed startup file:/dev/urandom 512
	SSLRandomSeed connect builtin
	SSLRandomSeed connect file:/dev/urandom 512
	SSLSessionCache        shmcb:/var/run/apache2/ssl_scache(512000)
	SSLSessionCacheTimeout  300
#	SSLMutex  file:/var/run/apache2/ssl_mutex
	Mutex file:${APACHE_LOCK_DIR} default
$ apache2 -v
	//* if apache version 2.4, then
	sudo nano /etc/apache2/sites-available/canvas.conf
		  <Directory /var/canvas/public>
		    Options All
		    AllowOverride All
		    Require all granted
		  </Directory>
$ sudo a2ensite canvas


Optimizing File Downloads
$ su <Username>
$ cd /var/canvas
$ sudo apt-get install libapache2-mod-xsendfile
$ sudo apachectl -M | sort
	//* shows  xsendfile_module (shared)
$ cp /var/canvas/config/environments/production.rb /var/canvas/config/environments/production-local.rb
$ nano /var/canvas/config/environments/production-local.rb
	  config.action_dispatch.x_sendfile_header = 'X-Sendfile'
$ sudo nano /etc/apache2/sites-available/canvas.conf
	XSendFile On
	XSendFilePath /var/canvas
$ sudo apachectl configtest

Cache configuration
$ sudo add-apt-repository ppa:chris-lea/redis-server -y
$ sudo apt-get update -y
$ sudo apt-get install redis-server -y
$ sudo systemctl enable redis-server
$ sudo systemctl status redis-server
	//* shows that redis is running
$ redis-cli -h localhost ping
	//* OK if response PONG
$ cd /var/canvas/
$ cp /var/canvas/config/cache_store.yml.example /var/canvas/config/cache_store.yml
$ nano config/cache_store.yml
	production:
	  cache_store: redis_store
$ sudo chown <Username> /var/canvas/config/cache_store.yml
$ sudo chmod 400 config/cache_store.yml
$ cp /var/canvas/config/redis.yml.example /var/canvas/config/redis.yml
$ nano config/redis.yml
	production:
	  servers:
	    - redis://localhost
$ sudo chown <Username> /var/canvas/config/redis.yml
$ sudo chmod 400 /var/canvas/config/redis.yml

QTIMigrationTool
$ sudo apt-get install python-lxml -y
$ su <Username>
$ cd /var/canvas/vendor
$ git clone https://github.com/instructure/QTIMigrationTool.git QTIMigrationTool
$ cd QTIMigrationTool
$ chmod +x migrate.py
$ cd /var/canvas
$ script/delayed_job restart
Canvas -> <Username> -> Site <Username> -> Plugins -> QTI Converter -> Enabled

START CANVAS
$ sudo ln -s /var/canvas/script/canvas_init /etc/init.d/canvas_init
$ sudo update-rc.d canvas_init defaults
$ sudo /etc/init.d/canvas_init start

AUTOMATIC JOBS
$ sudo ln -s /var/canvas/script/canvas_init /etc/init.d/canvas_init
$ sudo update-rc.d canvas_init defaults
$ sudo /etc/init.d/canvas_init start

LOGS
$ sudo su
$ mkdir /var/log/canvas
$ chown root:adm /var/log/canvas
$ ln -s /var/canvas/log/delayed_job.log	/var/log/canvas
$ ln -s /var/canvas/log/production.log /var/log/canvas

INSTALL phppgmyadmin
$ sudo su
$ sudo apt-get install phppgmyadmin -y
$ nano /etc/apache2/conf-available/phppgmyadmin.conf
Listen  <SSHPort>
<VirtualHost *:<SSHPort>>
   ServerName <Site>
   DocumentRoot /usr/share/phppgmyadmin
   Alias /phppgmyadmin /usr/share/phppgmyadmin
   Alias /phppgmyadmin /usr/share/phppgmyadmin
   Alias /phppgmyadmin /usr/share/phppgmyadmin
   Alias /phppgmyadmin /usr/share/phppgmyadmin
   Alias /phpmyadmin /usr/share/phppgmyadmin
   Alias /phpmyadmin /usr/share/phppgmyadmin
   Alias /phpmyadmin /usr/share/phppgmyadmin
   Alias /phpmyadmin /usr/share/phppgmyadmin
   SSLEngine on
   SSLCertificateFile /etc/letsencrypt/live/<Site>/fullchain.pem
   SSLCertificateKeyFile /etc/letsencrypt/live/<Site>/privkey.pem
   SSLProtocol all -SSLv2 -SSLv3
   SSLCipher<Phone> HIGH:MEDIUM:!aNULL:!MD5:!SEED:!IDEA:!RC4

   <Directory /usr/share/phppgmyadmin>
      AddDefaultCharset UTF-8
      <IfModule mod_dir.c>
        DirectoryIndex index.php
      </IfModule>
      AllowOverride None
      # Only allow connections from localhost:
      #Require local
      Require all granted
      <IfModule mod_php.c>
         php_flag magic_quotes_gpc Off
         php_flag track_vars On
         #php_value include_path .
      </IfModule>
      <IfModule !mod_php.c>
         <IfModule mod_actions.c>
            <IfModule mod_cgi.c>
               AddType application/x-httpd-php .php
               Action application/x-httpd-php /cgi-bin/php
            </IfModule>
            <IfModule mod_cgid.c>
               AddType application/x-httpd-php .php
               Action application/x-httpd-php /cgi-bin/php
            </IfModule>
         </IfModule>
      </IfModule>
   </Directory>
</VirtualHost>



//* Do the following if you want to use postgres user to log into phppgmyadmin
	$ nano /etc/phppgmyadmin/config.inc.php
		$conf['extra_login_security'] = false;
open https://<Site>/phppgmyadmin/














Error:
	[passenger:error] [pid 623:tid 140548242463680] *** Passenger could not be initialized because of this error: Unable to start Phusion Passenger: 
	Support binary PassengerAgent not found (tried: /usr/buildout/support-binaries/PassengerAgent and /root/.passenger/support-binaries/6.0.4/Passen
	gerAgent). There may be different causes for this:\n\n - Your 'PassengerRoot' setting is set to the wrong value. Please see https://www.phusionp
	assenger.com/library/config/apache/reference/#passengerroot to learn how to fix the value.\n - The PassengerAgent binary is not compiled. Please
	run this command to compile it: /usr/bin/passenger-config compile-agent\n - Your Passenger installation is broken or incomplete. Please reinstall
	Passenger.
Solution
	$ nano /etc/apache2/apache2.conf
		#	PassengerRoot /usr

Error	
	Connection refused for
		curl https://<Site>:3000/
		curl http://<Site>:3000/
Solution
	





ERROR on: RAILS_ENV=production bundle exec rake canvas:compile_assets
	$ es-check es8 ./public/dist/**/*.js
	ES-Check: there were no ES version matching errors!
	Done in 155.61s.
	--> Finished: 'js:webpack_development' in 156.25453681699946
	rake aborted!
	Parallel::UndumpableException: RuntimeError: Error running js:webpack_production:
	ABORTING
	/var/canvas/lib/tasks/js.rake:50:in `block (2 levels) in <top (required)>'
	/var/canvas/lib/tasks/canvas.rake:76:in `block (5 levels) in <top (required)>'
	/var/canvas/lib/tasks/canvas.rake:7:in `log_time'
	/var/canvas/lib/tasks/canvas.rake:76:in `block (4 levels) in <top (required)>'
	/var/canvas/vendor/bundle/ruby/2.4.0/gems/parallel-1.18.0/lib/parallel.rb:506:in `call_with_index'
	/var/canvas/vendor/bundle/ruby/2.4.0/gems/parallel-1.18.0/lib/parallel.rb:360:in `block (2 levels) in work_in_threads'
	/var/canvas/vendor/bundle/ruby/2.4.0/gems/parallel-1.18.0/lib/parallel.rb:515:in `with_instrumentation'
	/var/canvas/vendor/bundle/ruby/2.4.0/gems/parallel-1.18.0/lib/parallel.rb:359:in `block in work_in_threads'
	/var/canvas/vendor/bundle/ruby/2.4.0/gems/parallel-1.18.0/lib/parallel.rb:209:in `block (3 levels) in in_threads'
	Tasks: TOP => canvas:compile_assets
	(See full trace by running task with --trace)
SOLUTION
	increase server memory to 8 Gb
	Retry: RAILS_ENV=production bundle exec rake canvas:compile_assets
SOLUTION:
	Reverting ffi back to 1.9.18 resolved the segfaults in both running compile_assets, as well as with exporting Gradebook CSVs.


OTHER ISSUES
	https://www.webhostingzone.org/more/blog/how-to-install-canvas-lms-on-vps-or-dedicated-server.html