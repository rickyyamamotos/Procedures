
VM hosted in vmhost XXX.XXX.XXX.77

/var/log/foreman-installer/foreman.log

SSL Certificate (godaddy cert)
	/etc/httpd/conf.d/05-foreman-ssl.conf
		SSLCertificateKeyFile	/etc/ssl/certs/<Site>.key
		SSLCertificateFile 	/etc/ssl/certs/<Site>.crt
		SSLCertificateChainFile	/etc/ssl/certs/<Site>_ca.crt
	/etc/foreman/settings.yaml
		:websockets_ssl_key: /etc/ssl/certs/<Site>.key
		:websockets_ssl_cert: /etc/ssl/certs/<Site>.crt
		:ssl_certificate: /etc/ssl/certs/<Site>.crt
		:ssl_ca_file: /etc/ssl/certs/<Site>_ca.crt
		:ssl_priv_key: /etc/ssl/certs/<Site>.key
	/etc/puppetlabs/puppet/foreman.yaml
		:ssl_ca: "/etc/ssl/certs/<Site>_ca.crt"
		:ssl_cert: "/etc/ssl/certs/<Site>.crt"
		:ssl_key: "/etc/ssl/certs/<Site>.key"
	/etc/foreman-proxy/settings.yml

hostname: <Site>
IP: XXX.XXX.XXX.167<CIDR>
SSH: XXX.XXX.XXX.167:@204
	rick / <Password>
	<Username> / <Password>
Webconsole: 
	https://<Site>
		<Username> / <Password>
		rick / <Password>
Foreman Proxy 
	https://<Site>:8443


Installing a module (i.E. ntp module)
	In <Site>
		$ puppet module install puppetlabs-ntp
	Log into http://<Site>
		The go to Configure -> Puppet -> Classes,  and click "Import from <Site>"
		Select the Module ("ntp and stdlib") and click on Update.
	Click on  ‘ntp’ class name and the select ‘Smart Class Parameter’
		Select the override option in case you want to specify your own NTP Servers. 
		Change the Key type Value to “String” 
		Specify the NTP Server’s name in the Default value Box and then click on Submit.
			0.pool.ntp.org
		and then click on Submit

Adding a class to a host (I.E. the ntp class to the <Site> host)
	In the foreman webconsole, go to hosts -> All hosts -> Click on "edit" on the right of the host (i.E. <Site>)
	Click on "Puppet Classes" from the upper menu -> Click on "+ntp", then click the "+" on the right of ntp
	The click on "Submit"
	In the host ssh console (force the class deployment, it will automatically deploy in less than 30 min)
		$ service ntpd status
		$ puppet agent --test
		$ service ntpd status

Check Synchronization report
	In the foreman webconsole, go to hosts -> All hosts -> Click on the host (i.E. <Site>) -> Click on the "Reports" tab


Add New hosts to Foreman Dashboard
	In the new host
		$ sudo apt install puppet
		$ puppet agent -td --server=<Site>
	In the Forman Dashboard 
		Go to Host -> All Hosts




Foreman is an open source tool that can help with the management of servers, by providing an easy way to interact with Puppet (or Chef) to automate tasks and application deployment. Foreman provides a robust web user interface, <Site>, and CLI which can be used to provision, configure, and monitor your servers. It is suitable for infrastructures of all sizes, and works with most distributions of Linux.

If you already have a Puppet master server, you may install Foreman on it but keep in mind that your default site.pp will be overwritten (leaving your existing Puppet agent nodes in an unmanaged state), and you will need to configure Foreman to manage your existing Puppet agent nodes.

Foreman depends on Puppet to perform the configuration management of hosts

Requirements
-Private Network DNS: Forward and reverse DNS must be configured
-every server must have a unique hostname.
-Firewall Open Ports: The Puppet master must be reachable on port 8140

Installing Foreman
(https://www.digitalocean.com/community/tutorials/how-to-use-foreman-to-manage-puppet-nodes-on-ubuntu-14-04)




Installation
(https://www.linuxtechi.com/install-and-configure-foreman-on-centos-7-x/)
(https://syslint.com/blog/tutorial/how-to-install-and-configure-foreman-on-centos-7-or-rhel-7/)
In <Site>
Configure networking
	IP: XXX.XXX.XXX.167<CIDR>
	GATEWAY: XXX.XXX.XXX.1
	DNS1: XXX.XXX.XXX.19
	DNS2: XXX.XXX.XXX.3
	HOSTNAME: <Site>

Manually add an A record in the DNS server
	RDP to XXX.XXX.XXX.19
	Add an A records in <Site>
		<Site>
		XXX.XXX.XXX.167

Install Foreman
In <Site>
$ nano /etc/profile.d/addpath.sh
	export PATH=$PATH:/usr/local/bin:/usr/local/sbin:/opt/puppetlabs/bin/
$ nano /etc/hostname
	<Site>
$ nano /etc/hosts
	XXX.XXX.XXX.167 <Site> <Site>
$ service network restart
$ firewall-cmd --zone=public --permanent --add-port=<PortNumber>/tcp
$ firewall-cmd --zone=public --permanent --add-port=8140/tcp
$ firewall-cmd --zone=public --permanent --add-port=8443/tcp
$ firewall-cmd --zone=public --permanent --add-port=53/tcp
$ firewall-cmd --zone=public --permanent --add-port=67-69/udp
$ firewall-cmd --zone=public --permanent --add-port=80/tcp
$ firewall-cmd --zone=public --permanent --add-port=443/tcp
$ firewall-cmd --zone=public --permanent --add-port=3000/tcp
$ firewall-cmd --zone=public --permanent --add-port=3306/tcp
$ firewall-cmd --zone=public --permanent --add-port=5910-5930/tcp
$ firewall-cmd --zone=public --permanent --add-port=5432/tcp
$ firewall-cmd --reload
$ yum install yum-utils
$ yum-config-manager --enable rhel-7-server-optional-rpms rhel-server-rhscl-7-rpms
Error: #1 dont install epel repository
       or #2 It appears that is an EPEL passenger and mod_passenger upgrade that is trumping the version in the foreman's 1.11 repo.
	Disabling EPEL during installation solves the install problem.
       or #3 Updated by Scott Worthington over 2 years ago
	To get a successful clean install, add to the [epel] section in /etc/yum.repos.d/epel.repo, "exclude=passenger* mod_passenger"
	Do not disable EPEL.
$ rpm -ivh http://yum.puppetlabs.com/puppetlabs-release-el-7.noarch.rpm
$ yum -y install epel-release http://yum.theforeman.org/releases/1.11/el7/x86_64/foreman-release.rpm
$ yum update -y
$ sudo yum -y install foreman-installer
$ sudo foreman-installer
	  Success!
	  * Foreman is running at https://<Site>
	      Initial credentials are <Username> / <Password>
	  * Foreman Proxy is running at https://<Site>:8443
	  * Puppetmaster is running at port 8140
	  The full log is at /var/log/foreman-installer/foreman.log


Access Foreman WebConsole
go to http://<Site>
	//* log using the initial credentials show in the previous step
goto Hosts –> All Hosts from Menu
	//* ensure that <Site>
	//* otherwise in the server run: $ puppet agent --test
        //* and try again

Install the Puppet NTP module for managing the NTP service:
In <Site>
$ puppet module install puppetlabs-ntp
Log into http://<Site>
The go to Configure -> Puppet -> Classes,  and click "Import from <Site>"
Select the Module ("ntp and stdlib") and click on Update.
Click on  ‘ntp’ class name and the select ‘Smart Class Parameter’
Select the override option in case you want to specify your own NTP Servers. 
	Change the Key type Value to “String” 
	Specify the NTP Server’s name in the Default value Box and then click on Submit.
		0.pool.ntp.org
	and then click on Submit
Adding ntp class to the host:
	In the foreman webconsole, go to hosts -> All hosts -> Click on "edit" on the right of the host (i.E. <Site>)
	Click on "Puppet Classes" from the upper menu -> Click on "+ntp", then click the "+" on the right of ntp
	The click on "Submit"
In the host ssh console
	$ service ntpd status
	$ puppet agent --test
	$ service ntpd status
Optionally create a autosign entry for puppet nodes that are part of the <Site> domain
	In the Forman Dashboard , Go To Infrastructure —> Select Smart Proxies —> Click on "<Site>" -> Click on the "Action" drop down menu -> Select Autosign
	Click on "Create Autosign entry" -> Type office.<Site> in the Name box -> Click on "Save"
Add New hosts to Foreman Dashboard
	In the new host
		$ sudo apt install puppet
		$ puppet agent -td --server=<Site>
	In the Forman Dashboard 
		Go to Host -> All Hosts
remove puppet module (I.E. ntp)
	$ puppet module uninstall --environment=production puppetlabs-ntp


Locking foreman and puppet
	$ yum -y install yum-plugin-versionlock
	$ yum versionlock add puppetserver
	$ yum versionlock add foreman
	$ yum versionlock add foreman-proxy
	$ yum versionlock add foreman-installer
	$ yum versionlock list





CONFIGURING A PUPPET 5.5.6 CLIENT IN CENTOS 7 OR 6
==================================================
	$ yum update -y
	$ yum install nano net-tools -y
	//* the following is not necessary since we are using a dns records in XXX.XXX.XXX.19
		$ nano /etc/hosts
			XXX.XXX.XXX.160	<Site>
	$ service network restart
	$ nano /etc/selinux/config
		SELINUX=disabled
	$ reboot now
	$ useradd rick
	$ passwd rick
		//* <Password>
	$ visudo
		<Username> ALL=NOPASSWD:ALL
		rick ALL=NOPASSWD:ALL
Install NTP:
	$ yum -y install ntpdate
	$ ntpdate 0.centos.pool.ntp.org
	//* Do one of the following
		//* CentOS 7:
			$ systemctl start ntpdate
			$ systemctl enable ntpdate
		//* CentOS 6:
			$ chkconfig ntpdate on
			$ service ntpdate start
Install Puppet:
	//* Do one of the following
		//* CentOS 7:
			$ rpm -Uvh https://yum.puppetlabs.com/puppet5/puppet5-release-el-7.noarch.rpm
		//* CentOS 6:
			$ rpm -Uvh https://yum.puppetlabs.com/puppet5/puppet5-release-el-6.noarch.rpm
	$ yum update -y
	$ yum install -y puppet-agent
	$ nano /etc/puppetlabs/puppet/puppet.conf
		[main]
		certname = HOSTNAME
			//* Replace HOSTNAME witht the puppet client hostname ($ hostname)
		server =  <Site>
		environment = production
	$ /opt/puppetlabs/bin/puppet resource service puppet ensure=running enable=true
Locking the Puppet Version in the client:
	 //* to maintain a consistent Puppet version across your entire infrastructure	
	$ /opt/puppetlabs/bin/puppet --version
		//* 5.5.6
	$ yum -y install yum-plugin-versionlock
	$ yum versionlock add puppet-agent
	$ yum versionlock list
Sign the client certificate on the master
	$ /opt/puppetlabs/bin/puppet cert list
		//* this should show the <Site>-puppet-client1 hash
	//* DO one of the following
		$ sudo /opt/puppetlabs/bin/puppet cert sign <Site>-puppet-client1
	OR
		$ sudo /opt/puppetlabs/bin/puppet cert sign --all
Forcing Sync of client, in <Site>-puppet-client1
	$ /opt/puppetlabs/bin/puppet agent --test
	//* Verify that <Username> was created, and the password for <Username> was changed


CONFIGURING A PUPPET 5.5.6 CLIENT IN UBUNTU 15.04 OR 16.04 OR 18.04
===================================================================
	$ apt-get update -y
	$ apt-get install nano net-tools -y
	$ nano /etc/hosts
		XXX.XXX.XXX.160	<Site>
	$ service networking restart
	$ nano /etc/selinux/config
		SELINUX=disabled
	$ reboot now
	$ useradd rick
	$ passwd rick
		//* <Password>
	$ visudo
		<Username> ALL=NOPASSWD:ALL
		rick ALL=NOPASSWD:ALL
Ensure timectl is property configured:
	$ timedatectl
		//* NTP synchronized: yes
		//* Otherwise:
				$ apt-get install ntp -y
				$ sudo update-rc.d ntp defaults
				$ sudo update-rc.d ntp enable
				$ sudo service ntp stop
				$ sudo ntpd -gq
				$ sudo service ntp start
				$ sudo timedatectl set-ntp true
Install Puppet:
	$ cd /tmp
	$ cat /etc/*-release
	//* Do one of the following:
		//* For Ubuntu 18.04
			$ wget https://apt.puppetlabs.com/puppet5-release-bionic.deb
			$ sudo dpkg -i puppet5-release-bionic.deb
		//* For Ubuntu 16.04
			$ wget https://apt.puppetlabs.com/puppet5-release-xenial.deb
			$ sudo dpkg -i puppet5-release-xenial.deb
		//* For Ubuntu 15.04
			$ wget https://apt.puppetlabs.com/puppet5-release-trusty.deb
			$ sudo dpkg -i puppet5-release-trusty.deb
		//* For Ubuntu 14.04
			$ wget https://apt.puppetlabs.com/puppet5-release-trusty.deb
			$ sudo dpkg -i puppet5-release-trusty.deb
		//* For Ubuntu 13.10
			$ wget https://apt.puppetlabs.com/puppet5-release-wheezy.deb
			$ sudo dpkg -i puppet5-release-wheezy.deb
		//* Other Ubuntu versions
			//* see https://apt.puppetlabs.com/
	$ sudo apt-get update
	$ apt-get install -y puppet-agent
	$ nano /etc/puppetlabs/puppet/puppet.conf
		[main]
		certname = HOSTNAME
			//* Repalce HOSTANAME with the puppet cient hostname ($ hostname)
		server = <Site>
		environment = production
	$ sudo /opt/puppetlabs/bin/puppet resource service puppet ensure=running enable=true
Locking the Puppet Version in the client: (Put a package on hold)
	 //* to maintain a consistent Puppet version across your entire infrastructure	
	$ dpkg --get-selections | grep puppet
		//* it should show: puppet-agent and puppet5-release
	$ echo "puppet-agent hold" | dpkg --set-selections
	$ echo "puppet5-release hold" | dpkg --set-selections
Sign the client certificate on the master
	$ /opt/puppetlabs/bin/puppet cert list
		//* this should show the <Site>-puppet-client1 hash
	//* DO one of the following
		$ /opt/puppetlabs/bin/puppet cert sign <Site>-puppet-client1
	OR
		$ /opt/puppetlabs/bin/puppet cert sign --all
Forcing Sync of client, in <Site>-puppet-client1
	$ /opt/puppetlabs/bin/puppet agent --test
	//* Verify that <Username> was created, and the password for <Username> was changed

INSTALL PUPPET-AGENT 5.5.6 IN WINDOWS 2012
==========================================
See https://puppet.com/docs/puppet/5.5/install_windows.html
In the puppet masters
	in site.app, add a node for the windows node we will install. This is to avoid running the default manifests in the windows node
log into the windows node
download and install 
	notepad c:\windows\system32\driver\etc\hosts
		//* add the ip of the puppet master
		XXX.XXX.XXX.160 <Site>
	https://downloads.puppetlabs.com/windows/puppet5/puppet-agent-5.5.6-x64.msi	(for Windows x64 )
	OR
	https://downloads.puppetlabs.com/windows/puppet5/puppet-agent-5.5.6-x86.msi	(for Windows x86)
During installation enter the puppet master FQDN: <Site>
After the installation is finished, log into the puppet master and accept the certificate of the windows node
	$ /opt/puppetlabs/bin/puppet cert sign --all
Go back to the window node and run
	C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Puppet\Run Puppet Agent
	OR
	C:\Program Files\Puppet Labs\Puppet\bin\run_puppet_interactive.bat


REVOKE A CLIENT CERT IN THE MASTER
==================================
	$ /opt/puppetlabs/bin/puppet cert clean <hostname>

LIST ALL CLIENTS CERTS IN THE MASTER
====================================
	$ /opt/puppetlabs/bin/puppet cert list --all

SHOW PUPPET VERSION
===================
	$ /opt/puppetlabs/bin/puppet --version

MANUALLY RUN PUPPET AGENT IN THE NODE
=====================================
$ /opt/puppetlabs/bin/puppet agent --test


