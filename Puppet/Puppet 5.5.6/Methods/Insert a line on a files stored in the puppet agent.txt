

This procedures copies a file from the puppet master and then edit an existing file on the puppet agent. Go to http://XXX.XXX.XXX.51/sshaudits.php
https://askubuntu.com/questions/90015/how-to-copy-files-to-all-machines-using-puppet-master
https://serverfault.com/questions/764220/puppet-how-to-add-a-line-to-an-existing-file
https://eureka.ykyuen.info/2014/03/06/puppet-add-or-replace-a-string-in-a-file/

Create a new Module
//* Copy the audit-ssh-access.sh to the puppet-master
C:\> PSCP -P <PortNumber> c:\tmp\audit-ssh-access.sh rick@XXX.XXX.XXX.160:/tmp/
//* Log into <Site>
//*adding the standard library if it is not installed yet
$ puppet module install puppetlabs-stdlib
$ cd /etc/puppetlabs/code/environments/production/modules/
$ mkdir auditssh
$ cd /etc/puppetlabs/code/environments/production/modules/auditssh/
$ mkdir manifests
$ mkdir files
$ mkdir templates
$ mkdir tests
$ mv /tmp/audit-ssh-access.sh ./files
$ chown root:root ./files/audit-ssh-access.sh
$ chmod 755 ./files/audit-ssh-access.sh
$ cd manifests
//* we want to add the following line: 
//*    session optional pam_exec.so seteuid /audit-ssh-access.sh
//* into the /etc/pam.d/sshd file in the puppet-agent
$ nano /etc/puppetlabs/code/environments/production/modules/auditssh/manifests/init.pp
	class auditssh {
	    file { "/audit-ssh-access.sh":
	        mode => "0711",
	        owner => 'root',
	        group => 'root',
	        source => 'puppet:///modules/auditssh/audit-ssh-access.sh',
	        checksum => mtime, 
	    }
	    file { '/etc/pam.d/sshd':
	        ensure => present,
	    }->
	    file_line { 'Append a line to /etc/pam.d/sshd':
	        path => '/etc/pam.d/sshd',
	        line => 'session optional pam_exec.so seteuid /audit-ssh-access.sh',
	    }
	    file { '/etc/ssh/sshd_config':
	        ensure => present,
	    }->
	    file_line { 'Ensure that UsePam is yes in /etc/ssh/sshd_config':
	        path => '/etc/ssh/sshd_config',
	        line => 'UsePAM yes',
	        match   => "^UsePAM.*$",
	    }
#	    package { 'openssh-clients':
#	        ensure => installed,
#            }
	    package { 'sshpass':
	        ensure => installed,
            }
	    $sshpackagename = $osfamily ? {
	        'Debian'  => 'openssh-client',
	        'RedHat'  => 'openssh-clients',
	        default   => warning('This distribution is not supported by the Accounts module'),
	    }
	    package { "$sshpackagename":
	        ensure => installed,
	    }
	}


//*Import the module and include the class. This will not overwrite the file being copied
//*OPTION1: to all nodes
$ nano /etc/puppetlabs/code/environments/production/manifests/site.pp
	node default {
	    include auditssh
	}
//*OPTION2: to a single node
$ nano /etc/puppetlabs/code/environments/production/manifests/site.pp
	node "<puppet-agent>" {
	    include auditssh
	}
//*    # replace <puppet-agent> witht he hostname of the puppet agent. Do the following on the puppet master: $ /opt/puppetlabs/bin/puppet cert list --all
//* I.E "<Site>"


On the puppet agent:
$ /opt/puppetlabs/bin/puppet agent --test


Error: Failed to apply catalog: Validation of Exec[echo "session optional pam_exec.so seteuid /audit-ssh-access.sh" >> /etc/pam.d/sshd] failed: 'echo "session optional pam_exec.so seteuid /audit-ssh-access.sh" >> /etc/pam.d/sshd' is not qualified and no path was specified. Please qualify the command or specify a path. (file: /etc/puppetlabs/code/environments/production/modules/auditssh/manifests/init.pp, line: 12)


Error: error :/bin/sh^M: bad interpreter: No such file or directory
in the puppet master
vi /etc/puppetlabs/code/environments/production/modules/auditssh/files/audit-ssh-access.sh
	<ESC> :set fileformat=unix
	<ESC> :wq!


Error: Error: Execution of '/usr/bin/yum -d 0 -e 0 -y install sshpass' returned 1: Error: Nothing to do
	$ yum remove epel-release-6-8.noarch
	$ yum install https://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm


NOT WORKED
Error: Error: Execution of '/usr/bin/yum -d 0 -e 0 -y install sshpass' returned 1: Error: Nothing to do
	Add add EPEL repository. (https://forge.puppet.com/stahnma/epel)
		puppet module install stahnma-epel --version 1.3.1
		puppet apply -e 'include epel'



Info: Using configured environment 'production'
Info: Retrieving pluginfacts
Info: Retrieving plugin
Info: Retrieving locales
Info: Loading facts
Info: Caching catalog for <Site>
Error: Execution of '/usr/bin/apt-get -q -y -o DPkg::Options::=--force-confold install $sshpackagename' returned 100: Reading package lists...
Building dependency tree...
Reading state information...
E: Unable to locate package $sshpackagename
E: Couldn't find any package by regex '$sshpackagename'
Error: /Stage[main]/Auditssh/Package[$sshpackagename]/ensure: change from 'purged' to 'present' failed: Execution of '/usr/bin/apt-get -q -y -o DPkg::Options::=--force-confold install $sshpackagename' returned 100: Reading package lists...
Building dependency tree...
Reading state information...
E: Unable to locate package $sshpackagename
E: Couldn't find any package by regex '$sshpackagename'


